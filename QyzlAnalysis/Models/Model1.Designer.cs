//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("QyzlModel", "FK_QY_SonDataType_QY_DataType", "QY_DataType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.QY_DataType), "QY_SonDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.QY_SonDataType), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_QY_SonDataType_QY_Unit", "QY_Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.QY_Unit), "QY_SonDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.QY_SonDataType), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_QY_YearNum_QY_SonDataType", "QY_SonDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.QY_SonDataType), "QY_YearNum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.QY_YearNum), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_QY_YearNum_QY_Unit", "QY_Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.QY_Unit), "QY_YearNum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.QY_YearNum), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_Classify", "ZL_DataType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_DataType), "ZL_Classify", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_Classify), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_ClassifyData", "ZL_Classify", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_Classify), "ZL_ClassifyData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_ClassifyData), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_Data", "ZL_ClassifyData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_ClassifyData), "ZL_Data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_Data), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK__ZL_DataType", "ZL_DataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QyzlAnalysis.Models.ZL_DataType), "ZL_DataType1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_DataType), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_GsCompany", "ZL_DataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QyzlAnalysis.Models.ZL_DataType), "ZL_GsCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_GsCompany), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_ViewType", "ZL_DataType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_DataType), "ZL_ViewType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_ViewType), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_ViewName", "ZL_ViewSonType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_ViewSonType), "ZL_ViewName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_ViewName), true)]
[assembly: EdmRelationshipAttribute("QyzlModel", "FK_ZL_ViewSonType", "ZL_ViewType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QyzlAnalysis.Models.ZL_ViewType), "ZL_ViewSonType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QyzlAnalysis.Models.ZL_ViewSonType), true)]

#endregion

namespace QyzlAnalysis.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class QyzlEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“QyzlEntities”部分中的连接字符串初始化新 QyzlEntities 对象。
        /// </summary>
        public QyzlEntities() : base("name=QyzlEntities", "QyzlEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 QyzlEntities 对象。
        /// </summary>
        public QyzlEntities(string connectionString) : base(connectionString, "QyzlEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 QyzlEntities 对象。
        /// </summary>
        public QyzlEntities(EntityConnection connection) : base(connection, "QyzlEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DataTest> DataTest
        {
            get
            {
                if ((_DataTest == null))
                {
                    _DataTest = base.CreateObjectSet<DataTest>("DataTest");
                }
                return _DataTest;
            }
        }
        private ObjectSet<DataTest> _DataTest;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DataTest2> DataTest2
        {
            get
            {
                if ((_DataTest2 == null))
                {
                    _DataTest2 = base.CreateObjectSet<DataTest2>("DataTest2");
                }
                return _DataTest2;
            }
        }
        private ObjectSet<DataTest2> _DataTest2;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<QY_DataType> QY_DataType
        {
            get
            {
                if ((_QY_DataType == null))
                {
                    _QY_DataType = base.CreateObjectSet<QY_DataType>("QY_DataType");
                }
                return _QY_DataType;
            }
        }
        private ObjectSet<QY_DataType> _QY_DataType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<QY_Relation> QY_Relation
        {
            get
            {
                if ((_QY_Relation == null))
                {
                    _QY_Relation = base.CreateObjectSet<QY_Relation>("QY_Relation");
                }
                return _QY_Relation;
            }
        }
        private ObjectSet<QY_Relation> _QY_Relation;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<QY_SonDataType> QY_SonDataType
        {
            get
            {
                if ((_QY_SonDataType == null))
                {
                    _QY_SonDataType = base.CreateObjectSet<QY_SonDataType>("QY_SonDataType");
                }
                return _QY_SonDataType;
            }
        }
        private ObjectSet<QY_SonDataType> _QY_SonDataType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<QY_Unit> QY_Unit
        {
            get
            {
                if ((_QY_Unit == null))
                {
                    _QY_Unit = base.CreateObjectSet<QY_Unit>("QY_Unit");
                }
                return _QY_Unit;
            }
        }
        private ObjectSet<QY_Unit> _QY_Unit;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<QY_YearNum> QY_YearNum
        {
            get
            {
                if ((_QY_YearNum == null))
                {
                    _QY_YearNum = base.CreateObjectSet<QY_YearNum>("QY_YearNum");
                }
                return _QY_YearNum;
            }
        }
        private ObjectSet<QY_YearNum> _QY_YearNum;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_Classify> ZL_Classify
        {
            get
            {
                if ((_ZL_Classify == null))
                {
                    _ZL_Classify = base.CreateObjectSet<ZL_Classify>("ZL_Classify");
                }
                return _ZL_Classify;
            }
        }
        private ObjectSet<ZL_Classify> _ZL_Classify;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_ClassifyData> ZL_ClassifyData
        {
            get
            {
                if ((_ZL_ClassifyData == null))
                {
                    _ZL_ClassifyData = base.CreateObjectSet<ZL_ClassifyData>("ZL_ClassifyData");
                }
                return _ZL_ClassifyData;
            }
        }
        private ObjectSet<ZL_ClassifyData> _ZL_ClassifyData;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_Data> ZL_Data
        {
            get
            {
                if ((_ZL_Data == null))
                {
                    _ZL_Data = base.CreateObjectSet<ZL_Data>("ZL_Data");
                }
                return _ZL_Data;
            }
        }
        private ObjectSet<ZL_Data> _ZL_Data;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_Data_Pa> ZL_Data_Pa
        {
            get
            {
                if ((_ZL_Data_Pa == null))
                {
                    _ZL_Data_Pa = base.CreateObjectSet<ZL_Data_Pa>("ZL_Data_Pa");
                }
                return _ZL_Data_Pa;
            }
        }
        private ObjectSet<ZL_Data_Pa> _ZL_Data_Pa;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_DataType> ZL_DataType
        {
            get
            {
                if ((_ZL_DataType == null))
                {
                    _ZL_DataType = base.CreateObjectSet<ZL_DataType>("ZL_DataType");
                }
                return _ZL_DataType;
            }
        }
        private ObjectSet<ZL_DataType> _ZL_DataType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_GsCompany> ZL_GsCompany
        {
            get
            {
                if ((_ZL_GsCompany == null))
                {
                    _ZL_GsCompany = base.CreateObjectSet<ZL_GsCompany>("ZL_GsCompany");
                }
                return _ZL_GsCompany;
            }
        }
        private ObjectSet<ZL_GsCompany> _ZL_GsCompany;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_ViewName> ZL_ViewName
        {
            get
            {
                if ((_ZL_ViewName == null))
                {
                    _ZL_ViewName = base.CreateObjectSet<ZL_ViewName>("ZL_ViewName");
                }
                return _ZL_ViewName;
            }
        }
        private ObjectSet<ZL_ViewName> _ZL_ViewName;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_ViewSonType> ZL_ViewSonType
        {
            get
            {
                if ((_ZL_ViewSonType == null))
                {
                    _ZL_ViewSonType = base.CreateObjectSet<ZL_ViewSonType>("ZL_ViewSonType");
                }
                return _ZL_ViewSonType;
            }
        }
        private ObjectSet<ZL_ViewSonType> _ZL_ViewSonType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_ViewType> ZL_ViewType
        {
            get
            {
                if ((_ZL_ViewType == null))
                {
                    _ZL_ViewType = base.CreateObjectSet<ZL_ViewType>("ZL_ViewType");
                }
                return _ZL_ViewType;
            }
        }
        private ObjectSet<ZL_ViewType> _ZL_ViewType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ZL_Match> ZL_Match
        {
            get
            {
                if ((_ZL_Match == null))
                {
                    _ZL_Match = base.CreateObjectSet<ZL_Match>("ZL_Match");
                }
                return _ZL_Match;
            }
        }
        private ObjectSet<ZL_Match> _ZL_Match;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 DataTest EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDataTest(DataTest dataTest)
        {
            base.AddObject("DataTest", dataTest);
        }
    
        /// <summary>
        /// 用于向 DataTest2 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDataTest2(DataTest2 dataTest2)
        {
            base.AddObject("DataTest2", dataTest2);
        }
    
        /// <summary>
        /// 用于向 QY_DataType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToQY_DataType(QY_DataType qY_DataType)
        {
            base.AddObject("QY_DataType", qY_DataType);
        }
    
        /// <summary>
        /// 用于向 QY_Relation EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToQY_Relation(QY_Relation qY_Relation)
        {
            base.AddObject("QY_Relation", qY_Relation);
        }
    
        /// <summary>
        /// 用于向 QY_SonDataType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToQY_SonDataType(QY_SonDataType qY_SonDataType)
        {
            base.AddObject("QY_SonDataType", qY_SonDataType);
        }
    
        /// <summary>
        /// 用于向 QY_Unit EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToQY_Unit(QY_Unit qY_Unit)
        {
            base.AddObject("QY_Unit", qY_Unit);
        }
    
        /// <summary>
        /// 用于向 QY_YearNum EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToQY_YearNum(QY_YearNum qY_YearNum)
        {
            base.AddObject("QY_YearNum", qY_YearNum);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// 用于向 ZL_Classify EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_Classify(ZL_Classify zL_Classify)
        {
            base.AddObject("ZL_Classify", zL_Classify);
        }
    
        /// <summary>
        /// 用于向 ZL_ClassifyData EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_ClassifyData(ZL_ClassifyData zL_ClassifyData)
        {
            base.AddObject("ZL_ClassifyData", zL_ClassifyData);
        }
    
        /// <summary>
        /// 用于向 ZL_Data EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_Data(ZL_Data zL_Data)
        {
            base.AddObject("ZL_Data", zL_Data);
        }
    
        /// <summary>
        /// 用于向 ZL_Data_Pa EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_Data_Pa(ZL_Data_Pa zL_Data_Pa)
        {
            base.AddObject("ZL_Data_Pa", zL_Data_Pa);
        }
    
        /// <summary>
        /// 用于向 ZL_DataType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_DataType(ZL_DataType zL_DataType)
        {
            base.AddObject("ZL_DataType", zL_DataType);
        }
    
        /// <summary>
        /// 用于向 ZL_GsCompany EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_GsCompany(ZL_GsCompany zL_GsCompany)
        {
            base.AddObject("ZL_GsCompany", zL_GsCompany);
        }
    
        /// <summary>
        /// 用于向 ZL_ViewName EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_ViewName(ZL_ViewName zL_ViewName)
        {
            base.AddObject("ZL_ViewName", zL_ViewName);
        }
    
        /// <summary>
        /// 用于向 ZL_ViewSonType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_ViewSonType(ZL_ViewSonType zL_ViewSonType)
        {
            base.AddObject("ZL_ViewSonType", zL_ViewSonType);
        }
    
        /// <summary>
        /// 用于向 ZL_ViewType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_ViewType(ZL_ViewType zL_ViewType)
        {
            base.AddObject("ZL_ViewType", zL_ViewType);
        }
    
        /// <summary>
        /// 用于向 ZL_Match EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToZL_Match(ZL_Match zL_Match)
        {
            base.AddObject("ZL_Match", zL_Match);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="DataTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataTest : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DataTest 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static DataTest CreateDataTest(global::System.Int32 id)
        {
            DataTest dataTest = new DataTest();
            dataTest.id = id;
            return dataTest;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> years
        {
            get
            {
                return _years;
            }
            set
            {
                OnyearsChanging(value);
                ReportPropertyChanging("years");
                _years = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("years");
                OnyearsChanged();
            }
        }
        private Nullable<global::System.Int32> _years;
        partial void OnyearsChanging(Nullable<global::System.Int32> value);
        partial void OnyearsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Ydata
        {
            get
            {
                return _Ydata;
            }
            set
            {
                OnYdataChanging(value);
                ReportPropertyChanging("Ydata");
                _Ydata = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ydata");
                OnYdataChanged();
            }
        }
        private Nullable<global::System.Decimal> _Ydata;
        partial void OnYdataChanging(Nullable<global::System.Decimal> value);
        partial void OnYdataChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sonType
        {
            get
            {
                return _sonType;
            }
            set
            {
                OnsonTypeChanging(value);
                ReportPropertyChanging("sonType");
                _sonType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sonType");
                OnsonTypeChanged();
            }
        }
        private global::System.String _sonType;
        partial void OnsonTypeChanging(global::System.String value);
        partial void OnsonTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String faType
        {
            get
            {
                return _faType;
            }
            set
            {
                OnfaTypeChanging(value);
                ReportPropertyChanging("faType");
                _faType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("faType");
                OnfaTypeChanged();
            }
        }
        private global::System.String _faType;
        partial void OnfaTypeChanging(global::System.String value);
        partial void OnfaTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="DataTest2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataTest2 : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DataTest2 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static DataTest2 CreateDataTest2(global::System.Int32 id)
        {
            DataTest2 dataTest2 = new DataTest2();
            dataTest2.id = id;
            return dataTest2;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> years
        {
            get
            {
                return _years;
            }
            set
            {
                OnyearsChanging(value);
                ReportPropertyChanging("years");
                _years = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("years");
                OnyearsChanged();
            }
        }
        private Nullable<global::System.Int32> _years;
        partial void OnyearsChanging(Nullable<global::System.Int32> value);
        partial void OnyearsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Ydata
        {
            get
            {
                return _Ydata;
            }
            set
            {
                OnYdataChanging(value);
                ReportPropertyChanging("Ydata");
                _Ydata = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ydata");
                OnYdataChanged();
            }
        }
        private Nullable<global::System.Decimal> _Ydata;
        partial void OnYdataChanging(Nullable<global::System.Decimal> value);
        partial void OnYdataChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="QY_DataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QY_DataType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 QY_DataType 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static QY_DataType CreateQY_DataType(global::System.Int32 id)
        {
            QY_DataType qY_DataType = new QY_DataType();
            qY_DataType.id = id;
            return qY_DataType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> defaultUnit
        {
            get
            {
                return _defaultUnit;
            }
            set
            {
                OndefaultUnitChanging(value);
                ReportPropertyChanging("defaultUnit");
                _defaultUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultUnit");
                OndefaultUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _defaultUnit;
        partial void OndefaultUnitChanging(Nullable<global::System.Int32> value);
        partial void OndefaultUnitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> defaultType
        {
            get
            {
                return _defaultType;
            }
            set
            {
                OndefaultTypeChanging(value);
                ReportPropertyChanging("defaultType");
                _defaultType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultType");
                OndefaultTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _defaultType;
        partial void OndefaultTypeChanging(Nullable<global::System.Int32> value);
        partial void OndefaultTypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_SonDataType_QY_DataType", "QY_SonDataType")]
        public EntityCollection<QY_SonDataType> QY_SonDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QY_SonDataType>("QyzlModel.FK_QY_SonDataType_QY_DataType", "QY_SonDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QY_SonDataType>("QyzlModel.FK_QY_SonDataType_QY_DataType", "QY_SonDataType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="QY_Relation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QY_Relation : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 QY_Relation 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static QY_Relation CreateQY_Relation(global::System.Int32 id)
        {
            QY_Relation qY_Relation = new QY_Relation();
            qY_Relation.id = id;
            return qY_Relation;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sdtid
        {
            get
            {
                return _sdtid;
            }
            set
            {
                OnsdtidChanging(value);
                ReportPropertyChanging("sdtid");
                _sdtid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sdtid");
                OnsdtidChanged();
            }
        }
        private Nullable<global::System.Int32> _sdtid;
        partial void OnsdtidChanging(Nullable<global::System.Int32> value);
        partial void OnsdtidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sonsdtid
        {
            get
            {
                return _sonsdtid;
            }
            set
            {
                OnsonsdtidChanging(value);
                ReportPropertyChanging("sonsdtid");
                _sonsdtid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sonsdtid");
                OnsonsdtidChanged();
            }
        }
        private Nullable<global::System.Int32> _sonsdtid;
        partial void OnsonsdtidChanging(Nullable<global::System.Int32> value);
        partial void OnsonsdtidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String tabName
        {
            get
            {
                return _tabName;
            }
            set
            {
                OntabNameChanging(value);
                ReportPropertyChanging("tabName");
                _tabName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tabName");
                OntabNameChanged();
            }
        }
        private global::System.String _tabName;
        partial void OntabNameChanging(global::System.String value);
        partial void OntabNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="QY_SonDataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QY_SonDataType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 QY_SonDataType 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static QY_SonDataType CreateQY_SonDataType(global::System.Int32 id)
        {
            QY_SonDataType qY_SonDataType = new QY_SonDataType();
            qY_SonDataType.id = id;
            return qY_SonDataType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> dtid
        {
            get
            {
                return _dtid;
            }
            set
            {
                OndtidChanging(value);
                ReportPropertyChanging("dtid");
                _dtid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dtid");
                OndtidChanged();
            }
        }
        private Nullable<global::System.Int32> _dtid;
        partial void OndtidChanging(Nullable<global::System.Int32> value);
        partial void OndtidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> defaultUnit
        {
            get
            {
                return _defaultUnit;
            }
            set
            {
                OndefaultUnitChanging(value);
                ReportPropertyChanging("defaultUnit");
                _defaultUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("defaultUnit");
                OndefaultUnitChanged();
            }
        }
        private Nullable<global::System.Int32> _defaultUnit;
        partial void OndefaultUnitChanging(Nullable<global::System.Int32> value);
        partial void OndefaultUnitChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_SonDataType_QY_DataType", "QY_DataType")]
        public QY_DataType QY_DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_DataType>("QyzlModel.FK_QY_SonDataType_QY_DataType", "QY_DataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_DataType>("QyzlModel.FK_QY_SonDataType_QY_DataType", "QY_DataType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QY_DataType> QY_DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_DataType>("QyzlModel.FK_QY_SonDataType_QY_DataType", "QY_DataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QY_DataType>("QyzlModel.FK_QY_SonDataType_QY_DataType", "QY_DataType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_SonDataType_QY_Unit", "QY_Unit")]
        public QY_Unit QY_Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_Unit>("QyzlModel.FK_QY_SonDataType_QY_Unit", "QY_Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_Unit>("QyzlModel.FK_QY_SonDataType_QY_Unit", "QY_Unit").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QY_Unit> QY_UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_Unit>("QyzlModel.FK_QY_SonDataType_QY_Unit", "QY_Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QY_Unit>("QyzlModel.FK_QY_SonDataType_QY_Unit", "QY_Unit", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_YearNum_QY_SonDataType", "QY_YearNum")]
        public EntityCollection<QY_YearNum> QY_YearNum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QY_YearNum>("QyzlModel.FK_QY_YearNum_QY_SonDataType", "QY_YearNum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QY_YearNum>("QyzlModel.FK_QY_YearNum_QY_SonDataType", "QY_YearNum", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="QY_Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QY_Unit : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 QY_Unit 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static QY_Unit CreateQY_Unit(global::System.Int32 id)
        {
            QY_Unit qY_Unit = new QY_Unit();
            qY_Unit.id = id;
            return qY_Unit;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_SonDataType_QY_Unit", "QY_SonDataType")]
        public EntityCollection<QY_SonDataType> QY_SonDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QY_SonDataType>("QyzlModel.FK_QY_SonDataType_QY_Unit", "QY_SonDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QY_SonDataType>("QyzlModel.FK_QY_SonDataType_QY_Unit", "QY_SonDataType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_YearNum_QY_Unit", "QY_YearNum")]
        public EntityCollection<QY_YearNum> QY_YearNum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QY_YearNum>("QyzlModel.FK_QY_YearNum_QY_Unit", "QY_YearNum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QY_YearNum>("QyzlModel.FK_QY_YearNum_QY_Unit", "QY_YearNum", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="QY_YearNum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QY_YearNum : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 QY_YearNum 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static QY_YearNum CreateQY_YearNum(global::System.Int32 id)
        {
            QY_YearNum qY_YearNum = new QY_YearNum();
            qY_YearNum.id = id;
            return qY_YearNum;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String presentYear
        {
            get
            {
                return _presentYear;
            }
            set
            {
                OnpresentYearChanging(value);
                ReportPropertyChanging("presentYear");
                _presentYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("presentYear");
                OnpresentYearChanged();
            }
        }
        private global::System.String _presentYear;
        partial void OnpresentYearChanging(global::System.String value);
        partial void OnpresentYearChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sdtid
        {
            get
            {
                return _sdtid;
            }
            set
            {
                OnsdtidChanging(value);
                ReportPropertyChanging("sdtid");
                _sdtid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sdtid");
                OnsdtidChanged();
            }
        }
        private Nullable<global::System.Int32> _sdtid;
        partial void OnsdtidChanging(Nullable<global::System.Int32> value);
        partial void OnsdtidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Decimal> _Num;
        partial void OnNumChanging(Nullable<global::System.Decimal> value);
        partial void OnNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> unit
        {
            get
            {
                return _unit;
            }
            set
            {
                OnunitChanging(value);
                ReportPropertyChanging("unit");
                _unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("unit");
                OnunitChanged();
            }
        }
        private Nullable<global::System.Int32> _unit;
        partial void OnunitChanging(Nullable<global::System.Int32> value);
        partial void OnunitChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_YearNum_QY_SonDataType", "QY_SonDataType")]
        public QY_SonDataType QY_SonDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_SonDataType>("QyzlModel.FK_QY_YearNum_QY_SonDataType", "QY_SonDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_SonDataType>("QyzlModel.FK_QY_YearNum_QY_SonDataType", "QY_SonDataType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QY_SonDataType> QY_SonDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_SonDataType>("QyzlModel.FK_QY_YearNum_QY_SonDataType", "QY_SonDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QY_SonDataType>("QyzlModel.FK_QY_YearNum_QY_SonDataType", "QY_SonDataType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_QY_YearNum_QY_Unit", "QY_Unit")]
        public QY_Unit QY_Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_Unit>("QyzlModel.FK_QY_YearNum_QY_Unit", "QY_Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_Unit>("QyzlModel.FK_QY_YearNum_QY_Unit", "QY_Unit").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QY_Unit> QY_UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QY_Unit>("QyzlModel.FK_QY_YearNum_QY_Unit", "QY_Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QY_Unit>("QyzlModel.FK_QY_YearNum_QY_Unit", "QY_Unit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="uName">UName 属性的初始值。</param>
        /// <param name="uPwd">UPwd 属性的初始值。</param>
        /// <param name="uRole">URole 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 id, global::System.String uName, global::System.String uPwd, global::System.String uRole)
        {
            User user = new User();
            user.ID = id;
            user.UName = uName;
            user.UPwd = uPwd;
            user.URole = uRole;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UName
        {
            get
            {
                return _UName;
            }
            set
            {
                OnUNameChanging(value);
                ReportPropertyChanging("UName");
                _UName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UName");
                OnUNameChanged();
            }
        }
        private global::System.String _UName;
        partial void OnUNameChanging(global::System.String value);
        partial void OnUNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UPwd
        {
            get
            {
                return _UPwd;
            }
            set
            {
                OnUPwdChanging(value);
                ReportPropertyChanging("UPwd");
                _UPwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UPwd");
                OnUPwdChanged();
            }
        }
        private global::System.String _UPwd;
        partial void OnUPwdChanging(global::System.String value);
        partial void OnUPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URole
        {
            get
            {
                return _URole;
            }
            set
            {
                OnURoleChanging(value);
                ReportPropertyChanging("URole");
                _URole = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URole");
                OnURoleChanged();
            }
        }
        private global::System.String _URole;
        partial void OnURoleChanging(global::System.String value);
        partial void OnURoleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_Classify")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_Classify : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_Classify 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_Classify CreateZL_Classify(global::System.Int32 id)
        {
            ZL_Classify zL_Classify = new ZL_Classify();
            zL_Classify.id = id;
            return zL_Classify;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Pid
        {
            get
            {
                return _Pid;
            }
            set
            {
                OnPidChanging(value);
                ReportPropertyChanging("Pid");
                _Pid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pid");
                OnPidChanged();
            }
        }
        private Nullable<global::System.Int32> _Pid;
        partial void OnPidChanging(Nullable<global::System.Int32> value);
        partial void OnPidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_Classify", "ZL_DataType")]
        public ZL_DataType ZL_DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_Classify", "ZL_DataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_Classify", "ZL_DataType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_DataType> ZL_DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_Classify", "ZL_DataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_Classify", "ZL_DataType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ClassifyData", "ZL_ClassifyData")]
        public EntityCollection<ZL_ClassifyData> ZL_ClassifyData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_ClassifyData>("QyzlModel.FK_ZL_ClassifyData", "ZL_ClassifyData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_ClassifyData>("QyzlModel.FK_ZL_ClassifyData", "ZL_ClassifyData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_ClassifyData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_ClassifyData : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_ClassifyData 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_ClassifyData CreateZL_ClassifyData(global::System.Int32 id)
        {
            ZL_ClassifyData zL_ClassifyData = new ZL_ClassifyData();
            zL_ClassifyData.id = id;
            return zL_ClassifyData;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassifyID
        {
            get
            {
                return _ClassifyID;
            }
            set
            {
                OnClassifyIDChanging(value);
                ReportPropertyChanging("ClassifyID");
                _ClassifyID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassifyID");
                OnClassifyIDChanged();
            }
        }
        private global::System.String _ClassifyID;
        partial void OnClassifyIDChanging(global::System.String value);
        partial void OnClassifyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cid
        {
            get
            {
                return _Cid;
            }
            set
            {
                OnCidChanging(value);
                ReportPropertyChanging("Cid");
                _Cid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cid");
                OnCidChanged();
            }
        }
        private Nullable<global::System.Int32> _Cid;
        partial void OnCidChanging(Nullable<global::System.Int32> value);
        partial void OnCidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsToDb
        {
            get
            {
                return _IsToDb;
            }
            set
            {
                OnIsToDbChanging(value);
                ReportPropertyChanging("IsToDb");
                _IsToDb = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsToDb");
                OnIsToDbChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsToDb;
        partial void OnIsToDbChanging(Nullable<global::System.Boolean> value);
        partial void OnIsToDbChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ClassifyData", "ZL_Classify")]
        public ZL_Classify ZL_Classify
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_Classify>("QyzlModel.FK_ZL_ClassifyData", "ZL_Classify").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_Classify>("QyzlModel.FK_ZL_ClassifyData", "ZL_Classify").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_Classify> ZL_ClassifyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_Classify>("QyzlModel.FK_ZL_ClassifyData", "ZL_Classify");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_Classify>("QyzlModel.FK_ZL_ClassifyData", "ZL_Classify", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_Data", "ZL_Data")]
        public EntityCollection<ZL_Data> ZL_Data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_Data>("QyzlModel.FK_ZL_Data", "ZL_Data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_Data>("QyzlModel.FK_ZL_Data", "ZL_Data", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_Data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_Data : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_Data 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_Data CreateZL_Data(global::System.Int32 id)
        {
            ZL_Data zL_Data = new ZL_Data();
            zL_Data.id = id;
            return zL_Data;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AN
        {
            get
            {
                return _AN;
            }
            set
            {
                OnANChanging(value);
                ReportPropertyChanging("AN");
                _AN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AN");
                OnANChanged();
            }
        }
        private global::System.String _AN;
        partial void OnANChanging(global::System.String value);
        partial void OnANChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Pd
        {
            get
            {
                return _Pd;
            }
            set
            {
                OnPdChanging(value);
                ReportPropertyChanging("Pd");
                _Pd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pd");
                OnPdChanged();
            }
        }
        private Nullable<global::System.DateTime> _Pd;
        partial void OnPdChanging(Nullable<global::System.DateTime> value);
        partial void OnPdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Ad
        {
            get
            {
                return _Ad;
            }
            set
            {
                OnAdChanging(value);
                ReportPropertyChanging("Ad");
                _Ad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ad");
                OnAdChanged();
            }
        }
        private Nullable<global::System.DateTime> _Ad;
        partial void OnAdChanging(Nullable<global::System.DateTime> value);
        partial void OnAdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pa
        {
            get
            {
                return _Pa;
            }
            set
            {
                OnPaChanging(value);
                ReportPropertyChanging("Pa");
                _Pa = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pa");
                OnPaChanged();
            }
        }
        private global::System.String _Pa;
        partial void OnPaChanging(global::System.String value);
        partial void OnPaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inn
        {
            get
            {
                return _Inn;
            }
            set
            {
                OnInnChanging(value);
                ReportPropertyChanging("Inn");
                _Inn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inn");
                OnInnChanged();
            }
        }
        private global::System.String _Inn;
        partial void OnInnChanging(global::System.String value);
        partial void OnInnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pic
        {
            get
            {
                return _Pic;
            }
            set
            {
                OnPicChanging(value);
                ReportPropertyChanging("Pic");
                _Pic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pic");
                OnPicChanged();
            }
        }
        private global::System.String _Pic;
        partial void OnPicChanging(global::System.String value);
        partial void OnPicChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sic
        {
            get
            {
                return _Sic;
            }
            set
            {
                OnSicChanging(value);
                ReportPropertyChanging("Sic");
                _Sic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sic");
                OnSicChanged();
            }
        }
        private global::System.String _Sic;
        partial void OnSicChanging(global::System.String value);
        partial void OnSicChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSq
        {
            get
            {
                return _IsSq;
            }
            set
            {
                OnIsSqChanging(value);
                ReportPropertyChanging("IsSq");
                _IsSq = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSq");
                OnIsSqChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSq;
        partial void OnIsSqChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSqChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Flzt
        {
            get
            {
                return _Flzt;
            }
            set
            {
                OnFlztChanging(value);
                ReportPropertyChanging("Flzt");
                _Flzt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Flzt");
                OnFlztChanged();
            }
        }
        private global::System.String _Flzt;
        partial void OnFlztChanging(global::System.String value);
        partial void OnFlztChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsHand
        {
            get
            {
                return _IsHand;
            }
            set
            {
                OnIsHandChanging(value);
                ReportPropertyChanging("IsHand");
                _IsHand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHand");
                OnIsHandChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsHand;
        partial void OnIsHandChanging(Nullable<global::System.Boolean> value);
        partial void OnIsHandChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CDID
        {
            get
            {
                return _CDID;
            }
            set
            {
                OnCDIDChanging(value);
                ReportPropertyChanging("CDID");
                _CDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CDID");
                OnCDIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CDID;
        partial void OnCDIDChanging(Nullable<global::System.Int32> value);
        partial void OnCDIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGs
        {
            get
            {
                return _IsGs;
            }
            set
            {
                OnIsGsChanging(value);
                ReportPropertyChanging("IsGs");
                _IsGs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGs");
                OnIsGsChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGs;
        partial void OnIsGsChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zllx
        {
            get
            {
                return _Zllx;
            }
            set
            {
                OnZllxChanging(value);
                ReportPropertyChanging("Zllx");
                _Zllx = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zllx");
                OnZllxChanged();
            }
        }
        private global::System.String _Zllx;
        partial void OnZllxChanging(global::System.String value);
        partial void OnZllxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SqDate
        {
            get
            {
                return _SqDate;
            }
            set
            {
                OnSqDateChanging(value);
                ReportPropertyChanging("SqDate");
                _SqDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SqDate");
                OnSqDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SqDate;
        partial void OnSqDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSqDateChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_Data", "ZL_ClassifyData")]
        public ZL_ClassifyData ZL_ClassifyData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ClassifyData>("QyzlModel.FK_ZL_Data", "ZL_ClassifyData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ClassifyData>("QyzlModel.FK_ZL_Data", "ZL_ClassifyData").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_ClassifyData> ZL_ClassifyDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ClassifyData>("QyzlModel.FK_ZL_Data", "ZL_ClassifyData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_ClassifyData>("QyzlModel.FK_ZL_Data", "ZL_ClassifyData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_Data_Pa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_Data_Pa : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_Data_Pa 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_Data_Pa CreateZL_Data_Pa(global::System.Int32 id)
        {
            ZL_Data_Pa zL_Data_Pa = new ZL_Data_Pa();
            zL_Data_Pa.id = id;
            return zL_Data_Pa;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pa
        {
            get
            {
                return _pa;
            }
            set
            {
                OnpaChanging(value);
                ReportPropertyChanging("pa");
                _pa = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pa");
                OnpaChanged();
            }
        }
        private global::System.String _pa;
        partial void OnpaChanging(global::System.String value);
        partial void OnpaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> zdid
        {
            get
            {
                return _zdid;
            }
            set
            {
                OnzdidChanging(value);
                ReportPropertyChanging("zdid");
                _zdid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("zdid");
                OnzdidChanged();
            }
        }
        private Nullable<global::System.Int32> _zdid;
        partial void OnzdidChanging(Nullable<global::System.Int32> value);
        partial void OnzdidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ad
        {
            get
            {
                return _ad;
            }
            set
            {
                OnadChanging(value);
                ReportPropertyChanging("ad");
                _ad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ad");
                OnadChanged();
            }
        }
        private Nullable<global::System.DateTime> _ad;
        partial void OnadChanging(Nullable<global::System.DateTime> value);
        partial void OnadChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isGs
        {
            get
            {
                return _isGs;
            }
            set
            {
                OnisGsChanging(value);
                ReportPropertyChanging("isGs");
                _isGs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isGs");
                OnisGsChanged();
            }
        }
        private Nullable<global::System.Boolean> _isGs;
        partial void OnisGsChanging(Nullable<global::System.Boolean> value);
        partial void OnisGsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String flzt
        {
            get
            {
                return _flzt;
            }
            set
            {
                OnflztChanging(value);
                ReportPropertyChanging("flzt");
                _flzt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("flzt");
                OnflztChanged();
            }
        }
        private global::System.String _flzt;
        partial void OnflztChanging(global::System.String value);
        partial void OnflztChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String zllx
        {
            get
            {
                return _zllx;
            }
            set
            {
                OnzllxChanging(value);
                ReportPropertyChanging("zllx");
                _zllx = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("zllx");
                OnzllxChanged();
            }
        }
        private global::System.String _zllx;
        partial void OnzllxChanging(global::System.String value);
        partial void OnzllxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cdid
        {
            get
            {
                return _cdid;
            }
            set
            {
                OncdidChanging(value);
                ReportPropertyChanging("cdid");
                _cdid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cdid");
                OncdidChanged();
            }
        }
        private Nullable<global::System.Int32> _cdid;
        partial void OncdidChanging(Nullable<global::System.Int32> value);
        partial void OncdidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isSq
        {
            get
            {
                return _isSq;
            }
            set
            {
                OnisSqChanging(value);
                ReportPropertyChanging("isSq");
                _isSq = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isSq");
                OnisSqChanged();
            }
        }
        private Nullable<global::System.Boolean> _isSq;
        partial void OnisSqChanging(Nullable<global::System.Boolean> value);
        partial void OnisSqChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_DataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_DataType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_DataType 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_DataType CreateZL_DataType(global::System.Int32 id)
        {
            ZL_DataType zL_DataType = new ZL_DataType();
            zL_DataType.id = id;
            return zL_DataType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_Classify", "ZL_Classify")]
        public EntityCollection<ZL_Classify> ZL_Classify
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_Classify>("QyzlModel.FK_ZL_Classify", "ZL_Classify");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_Classify>("QyzlModel.FK_ZL_Classify", "ZL_Classify", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK__ZL_DataType", "ZL_DataType1")]
        public ZL_DataType ZL_DataType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType1").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_DataType> ZL_DataType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK__ZL_DataType", "ZL_DataType")]
        public ZL_DataType ZL_DataType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_DataType> ZL_DataType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_DataType>("QyzlModel.FK__ZL_DataType", "ZL_DataType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_GsCompany", "ZL_GsCompany")]
        public EntityCollection<ZL_GsCompany> ZL_GsCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_GsCompany>("QyzlModel.FK_ZL_GsCompany", "ZL_GsCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_GsCompany>("QyzlModel.FK_ZL_GsCompany", "ZL_GsCompany", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ViewType", "ZL_ViewType")]
        public EntityCollection<ZL_ViewType> ZL_ViewType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_ViewType>("QyzlModel.FK_ZL_ViewType", "ZL_ViewType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_ViewType>("QyzlModel.FK_ZL_ViewType", "ZL_ViewType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_GsCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_GsCompany : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_GsCompany 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="did">did 属性的初始值。</param>
        public static ZL_GsCompany CreateZL_GsCompany(global::System.Int32 id, global::System.String name, global::System.Int32 did)
        {
            ZL_GsCompany zL_GsCompany = new ZL_GsCompany();
            zL_GsCompany.id = id;
            zL_GsCompany.name = name;
            zL_GsCompany.did = did;
            return zL_GsCompany;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 did
        {
            get
            {
                return _did;
            }
            set
            {
                OndidChanging(value);
                ReportPropertyChanging("did");
                _did = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("did");
                OndidChanged();
            }
        }
        private global::System.Int32 _did;
        partial void OndidChanging(global::System.Int32 value);
        partial void OndidChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_GsCompany", "ZL_DataType")]
        public ZL_DataType ZL_DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_GsCompany", "ZL_DataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_GsCompany", "ZL_DataType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_DataType> ZL_DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_GsCompany", "ZL_DataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_GsCompany", "ZL_DataType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_Match")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_Match : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_Match 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_Match CreateZL_Match(global::System.Int32 id)
        {
            ZL_Match zL_Match = new ZL_Match();
            zL_Match.id = id;
            return zL_Match;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String years
        {
            get
            {
                return _years;
            }
            set
            {
                OnyearsChanging(value);
                ReportPropertyChanging("years");
                _years = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("years");
                OnyearsChanged();
            }
        }
        private global::System.String _years;
        partial void OnyearsChanging(global::System.String value);
        partial void OnyearsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nums
        {
            get
            {
                return _nums;
            }
            set
            {
                OnnumsChanging(value);
                ReportPropertyChanging("nums");
                _nums = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("nums");
                OnnumsChanged();
            }
        }
        private global::System.String _nums;
        partial void OnnumsChanging(global::System.String value);
        partial void OnnumsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String names
        {
            get
            {
                return _names;
            }
            set
            {
                OnnamesChanging(value);
                ReportPropertyChanging("names");
                _names = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("names");
                OnnamesChanged();
            }
        }
        private global::System.String _names;
        partial void OnnamesChanging(global::System.String value);
        partial void OnnamesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SumName
        {
            get
            {
                return _SumName;
            }
            set
            {
                OnSumNameChanging(value);
                ReportPropertyChanging("SumName");
                _SumName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SumName");
                OnSumNameChanged();
            }
        }
        private global::System.String _SumName;
        partial void OnSumNameChanging(global::System.String value);
        partial void OnSumNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pihao
        {
            get
            {
                return _pihao;
            }
            set
            {
                OnpihaoChanging(value);
                ReportPropertyChanging("pihao");
                _pihao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pihao");
                OnpihaoChanged();
            }
        }
        private global::System.String _pihao;
        partial void OnpihaoChanging(global::System.String value);
        partial void OnpihaoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ty
        {
            get
            {
                return _ty;
            }
            set
            {
                OntyChanging(value);
                ReportPropertyChanging("ty");
                _ty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ty");
                OntyChanged();
            }
        }
        private Nullable<global::System.Int32> _ty;
        partial void OntyChanging(Nullable<global::System.Int32> value);
        partial void OntyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_ViewName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_ViewName : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_ViewName 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_ViewName CreateZL_ViewName(global::System.Int32 id)
        {
            ZL_ViewName zL_ViewName = new ZL_ViewName();
            zL_ViewName.id = id;
            return zL_ViewName;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ViewName
        {
            get
            {
                return _ViewName;
            }
            set
            {
                OnViewNameChanging(value);
                ReportPropertyChanging("ViewName");
                _ViewName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ViewName");
                OnViewNameChanged();
            }
        }
        private global::System.String _ViewName;
        partial void OnViewNameChanging(global::System.String value);
        partial void OnViewNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> zsid
        {
            get
            {
                return _zsid;
            }
            set
            {
                OnzsidChanging(value);
                ReportPropertyChanging("zsid");
                _zsid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("zsid");
                OnzsidChanged();
            }
        }
        private Nullable<global::System.Int32> _zsid;
        partial void OnzsidChanging(Nullable<global::System.Int32> value);
        partial void OnzsidChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ViewName", "ZL_ViewSonType")]
        public ZL_ViewSonType ZL_ViewSonType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ViewSonType>("QyzlModel.FK_ZL_ViewName", "ZL_ViewSonType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ViewSonType>("QyzlModel.FK_ZL_ViewName", "ZL_ViewSonType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_ViewSonType> ZL_ViewSonTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ViewSonType>("QyzlModel.FK_ZL_ViewName", "ZL_ViewSonType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_ViewSonType>("QyzlModel.FK_ZL_ViewName", "ZL_ViewSonType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_ViewSonType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_ViewSonType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_ViewSonType 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_ViewSonType CreateZL_ViewSonType(global::System.Int32 id)
        {
            ZL_ViewSonType zL_ViewSonType = new ZL_ViewSonType();
            zL_ViewSonType.id = id;
            return zL_ViewSonType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowName
        {
            get
            {
                return _ShowName;
            }
            set
            {
                OnShowNameChanging(value);
                ReportPropertyChanging("ShowName");
                _ShowName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowName");
                OnShowNameChanged();
            }
        }
        private global::System.String _ShowName;
        partial void OnShowNameChanging(global::System.String value);
        partial void OnShowNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> zvid
        {
            get
            {
                return _zvid;
            }
            set
            {
                OnzvidChanging(value);
                ReportPropertyChanging("zvid");
                _zvid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("zvid");
                OnzvidChanged();
            }
        }
        private Nullable<global::System.Int32> _zvid;
        partial void OnzvidChanging(Nullable<global::System.Int32> value);
        partial void OnzvidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> limits
        {
            get
            {
                return _limits;
            }
            set
            {
                OnlimitsChanging(value);
                ReportPropertyChanging("limits");
                _limits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("limits");
                OnlimitsChanged();
            }
        }
        private Nullable<global::System.Int32> _limits;
        partial void OnlimitsChanging(Nullable<global::System.Int32> value);
        partial void OnlimitsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pid
        {
            get
            {
                return _pid;
            }
            set
            {
                OnpidChanging(value);
                ReportPropertyChanging("pid");
                _pid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pid");
                OnpidChanged();
            }
        }
        private Nullable<global::System.Int32> _pid;
        partial void OnpidChanging(Nullable<global::System.Int32> value);
        partial void OnpidChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ViewName", "ZL_ViewName")]
        public EntityCollection<ZL_ViewName> ZL_ViewName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_ViewName>("QyzlModel.FK_ZL_ViewName", "ZL_ViewName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_ViewName>("QyzlModel.FK_ZL_ViewName", "ZL_ViewName", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ViewSonType", "ZL_ViewType")]
        public ZL_ViewType ZL_ViewType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ViewType>("QyzlModel.FK_ZL_ViewSonType", "ZL_ViewType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ViewType>("QyzlModel.FK_ZL_ViewSonType", "ZL_ViewType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_ViewType> ZL_ViewTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_ViewType>("QyzlModel.FK_ZL_ViewSonType", "ZL_ViewType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_ViewType>("QyzlModel.FK_ZL_ViewSonType", "ZL_ViewType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QyzlModel", Name="ZL_ViewType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZL_ViewType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ZL_ViewType 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static ZL_ViewType CreateZL_ViewType(global::System.Int32 id)
        {
            ZL_ViewType zL_ViewType = new ZL_ViewType();
            zL_ViewType.id = id;
            return zL_ViewType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String View_name
        {
            get
            {
                return _View_name;
            }
            set
            {
                OnView_nameChanging(value);
                ReportPropertyChanging("View_name");
                _View_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("View_name");
                OnView_nameChanged();
            }
        }
        private global::System.String _View_name;
        partial void OnView_nameChanging(global::System.String value);
        partial void OnView_nameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZDID
        {
            get
            {
                return _ZDID;
            }
            set
            {
                OnZDIDChanging(value);
                ReportPropertyChanging("ZDID");
                _ZDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZDID");
                OnZDIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZDID;
        partial void OnZDIDChanging(Nullable<global::System.Int32> value);
        partial void OnZDIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ViewType", "ZL_DataType")]
        public ZL_DataType ZL_DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_ViewType", "ZL_DataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_ViewType", "ZL_DataType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZL_DataType> ZL_DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_ViewType", "ZL_DataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZL_DataType>("QyzlModel.FK_ZL_ViewType", "ZL_DataType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QyzlModel", "FK_ZL_ViewSonType", "ZL_ViewSonType")]
        public EntityCollection<ZL_ViewSonType> ZL_ViewSonType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZL_ViewSonType>("QyzlModel.FK_ZL_ViewSonType", "ZL_ViewSonType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZL_ViewSonType>("QyzlModel.FK_ZL_ViewSonType", "ZL_ViewSonType", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
